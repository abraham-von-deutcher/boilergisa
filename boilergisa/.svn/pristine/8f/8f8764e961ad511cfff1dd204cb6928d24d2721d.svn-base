package com.my.boilergisa.interceptor;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
import org.springframework.web.util.WebUtils;

import com.my.boilergisa.dto.CustmrVO;
import com.my.boilergisa.service.CustmrService;

import lombok.extern.java.Log;

@Component
@Log
public class CustmrInterceptor extends HandlerInterceptorAdapter{
	
	@Autowired 
	CustmrService custmrService;
	
	private void saveDestination(HttpServletRequest request) {
		String uri = request.getRequestURI();
		String query = request.getQueryString();
		if(query == null || query.equals("null")) {
			query ="";
		} else {
			query ="?" + query;
		}
		
		if(request.getMethod().equals("GET")) {
			log.info("destination :" + (uri + query));
			request.getSession().setAttribute("destination", uri + query);
		}
	}
	
	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
		//세션을 널이고, 쿠키만 있을때
		
		HttpSession session = request.getSession();        
		Cookie custmrLogin = WebUtils.getCookie(request, "loginCookie");
        if (custmrLogin != null){
        	log.info(custmrLogin.getValue());
        	CustmrVO sessionKey = custmrService.checkLoginBefore(custmrLogin.getValue());
        	
        	if(sessionKey != null) {
        		session.setAttribute("custmrID", sessionKey.getCustmrID());
            }
        }	
        return true;
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		// TODO Auto-generated method stub
		super.postHandle(request, response, handler, modelAndView);
	}
}
