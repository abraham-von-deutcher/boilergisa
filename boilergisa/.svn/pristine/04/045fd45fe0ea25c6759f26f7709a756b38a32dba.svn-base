package com.my.boilergisa.utils;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.imageio.ImageIO;

import org.apache.commons.io.FilenameUtils;
import org.imgscalr.Scalr;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.my.boilergisa.dto.EngnrFileVO;

import lombok.extern.java.Log;


@Component
@Log
public class EngnrFileUtils {	

	private final String getRandomString() {
		return UUID.randomUUID().toString().replaceAll("-", "");
	}

	public List<Map<String, Object>> uploadFiles(String engnrNo, MultipartFile file){
	
		/** 업로드 경로 */
		String uploadPath = Paths.get("C:", "boilergisa", "engnr", engnrNo).toString();	
		/* 파일명*/
		String originalFileName = file.getOriginalFilename().replace(" ",""); // 파일명
		/* 파일 확장자 */
		final String extension = FilenameUtils.getExtension(originalFileName);
		
		/* 파일이 비어있으면 비어있는 리스트 반환 */
		if (file.getSize() < 1) {
			return Collections.emptyList();
		}
		
		Map<String, Object> paramMap = new HashMap<String, Object>();
		/* 업로드 파일 정보를 담을 비어있는 리스트 */
		List<Map<String, Object>> fileList = new ArrayList<>();
		
		/* uploadPath에 해당하는 디렉터리가 존재하지 않으면, 부모 디렉터리를 포함한 모든 디렉터리를 생성 */
		File dir = new File(uploadPath);
		if (dir.exists() == false) {
			dir.mkdirs();
		}
		try {
			/* 1. 파일명 중복 방지, 서버에 저장할 파일명 (랜덤 문자열 + 확장자) */
			String saveName = getRandomString() + "." + extension;
			log.info(saveName);
				/* 업로드 경로에 saveName과 동일한 이름을 가진 파일 생성 */
			
			/*
			// 4. 이미지 파일인 경우 썸네일이미지 생성
	        if (MediaUtils.getMediaType(originalFileName) != null) {
	        	saveName = makeThumbnail(uploadPath, saveName);
	        }
	        */
			File target = new File(uploadPath, saveName);
			
			file.transferTo(target);
				/* 파일 정보 저장 */
			
			
			
			
			
			paramMap.put("engnrNo",engnrNo);
			paramMap.put("originalName",file.getOriginalFilename());
			paramMap.put("thumbnailName",saveName);
			paramMap.put("fileSize",file.getSize());
				/* 파일 정보 추가 */
			fileList.add(paramMap);
		
		} catch (IOException e) {
			//throw new AttachFileException("[" + file.getOriginalFilename() + "] failed to save file...");

		} catch (Exception e) {
			//throw new AttachFileException("[" + file.getOriginalFilename() + "] failed to save file...");
		}
	 // end of for
		return fileList;
	}

	 // 파일 삭제 처리
	public static void deleteFile(String fileName, String engnrNo) {
		String uploadPath = Paths.get("C:", "boilergisa", "engnr", engnrNo).toString();	
		
	        // 1. 원본 이미지 파일 삭제
	        MediaType mediaType = MediaUtils.getMediaType(fileName);
	        if (mediaType != null) {
	            String originalImg = fileName.substring(0, 12) + fileName.substring(23);
	            new File(uploadPath + originalImg.replace('/', File.separatorChar)).delete();
	        }

	        // 2. 파일 삭제(썸네일이미지 or 일반파일)
	        new File(uploadPath + fileName.replace('/', File.separatorChar)).delete();
	}
	// 파일 출력을 위한 HttpHeader 설정
    public static HttpHeaders getHttpHeaders(String fileName) throws Exception {

        MediaType mediaType = MediaUtils.getMediaType(fileName); // 파일타입 확인
        HttpHeaders httpHeaders = new HttpHeaders();

        // 이미지 파일 O
        if (mediaType != null) {
            httpHeaders.setContentType(mediaType);
            return httpHeaders;
        }

        // 이미지 파일 X
        fileName = fileName.substring(fileName.indexOf("_") + 1); // UUID 제거
        httpHeaders.setContentType(MediaType.APPLICATION_OCTET_STREAM); // 다운로드 MIME 타입 설정
        // 파일명 한글 인코딩처리
        httpHeaders.add("Content-Disposition",
                        "attachment; filename=\"" + new String(fileName.getBytes("UTF-8"),
                                "ISO-8859-1")+"\"");

        return httpHeaders;
    }
    // 썸네일 이미지 생성
    private static String makeThumbnail(String uploadPath, String fileName) throws Exception {

        // 원본이미지를 메모리상에 로딩
        BufferedImage originalImg = ImageIO.read(new File(uploadPath + fileName));
        // 원본이미지를 축소
        BufferedImage thumbnailImg = Scalr.resize(originalImg, Scalr.Method.AUTOMATIC, Scalr.Mode.FIT_TO_HEIGHT, 100);
        // 썸네일 파일명
        String thumbnailImgName = "boilergisa_" + fileName;
        // 썸네일 업로드 경로
        String fullPath = uploadPath + File.separator + thumbnailImgName;
        // 썸네일 파일 객체생성
        File newFile = new File(fullPath);
        // 썸네일 파일 확장자 추출
        String formatName = MediaUtils.getFormatName(fileName);
        // 썸네일 파일 저장
        ImageIO.write(thumbnailImg, formatName, newFile);

        return thumbnailImgName;
    }
}