package com.my.boilergisa.controller;


import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.servlet.ModelAndView;

import com.my.boilergisa.service.UserService;
import com.my.boilergisa.dto.LoginDTO;

import lombok.extern.java.Log;

@Controller
@Log

public class UserLoginController {
	
	//@Autowired UserService userService;	
	
	//로그인 페이지
	@GetMapping(value = "/user/userLogin")
	 public ModelAndView userLoginPage(Model model) {
		log.info("로그인페이지이동");
		ModelAndView mv = new ModelAndView("/user/userLogin");
		//mv.addObject("title", "승진쓰프로젝트");
		return mv;
		
	}
	/*
	//로그인처리
	@PostMapping(value = "/user/userLogin")
	public void userLoginPro(LoginDTO loginDTO, HttpSession session, Model model)throws Exception{
		
	 // 아이디 비번 일치 확인
		UserVO userVO = userService.userLogin(loginDTO);			
		if (userVO == null || !BCrypt.checkpw(loginDTO.getUserPassword(), userVO.getUserPassword())) {
			logger.info("로그인 실패");
			model.addAttribute("msg", "Failure");
			return;
		}
		if (loginDTO.isUseCookie()) {
        	int amount = 60 * 60 * 24 * 365;
        	Date sessionLimit = new Date(System.currentTimeMillis() + (1000 * amount));
        	userService.userKeepLogin(userVO.getUserID(), session.getId(), sessionLimit);
        }
		userService.updateLoginDate(userVO.getUserID());
		model.addAttribute("user", userVO);
        logger.info("로그인 처리");
	}
	
	
	@RequestMapping(value = "/userLogout", method = RequestMethod.GET)
    public String logout(HttpServletRequest request, HttpServletResponse response, Model model) throws Exception {
		HttpSession httpSession = request.getSession();
        Object object = httpSession.getAttribute("userID");
        if (object != null) {
            UserVO userVO = (UserVO) object;
            httpSession.removeAttribute("userID");
            httpSession.invalidate();
            Cookie loginCookie = WebUtils.getCookie(request, "loginCookie");
            if (loginCookie != null) {
                loginCookie.setPath("/");
                loginCookie.setMaxAge(0);
                response.addCookie(loginCookie);
                userService.userKeepLogin(userVO.getUserID(), "none", new Date());
            }
        }
        logger.info("로그아웃 처리");
        model.addAttribute("mgs", "Logout");
        return "index";
    }
	
	@RequestMapping(value = "/userMain", method= RequestMethod.GET)
	public String userMain(UserVO login, HttpServletRequest request, Model model) throws Exception{
		
		HttpSession session = request.getSession();
		UserVO vo = (UserVO) session.getAttribute("userID");
		userService.userInfo(vo);
		model.addAttribute("userVO", vo);
		
		logger.info("유저 메인 페이지 이동");
		return "/user/userMain";
	}
	*/
}
